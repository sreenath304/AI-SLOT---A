from collections import deque
def bfs(start, goal='123456780'):
    moves = lambda s: [s[:i]+s[j]+s[i+1:j]+s[i]+s[j+1:] for j in [i-3,i+3,i-1,i+1] if 0<=j<9 and (i,j) not in [(2,3),(3,2),(5,6),(6,5)]]
    i, visited, q = start.index('0'), set(), deque([(start, [])])
    while q:
        s, path = q.popleft()
        if s == goal: return path+[s]
        if s in visited: continue
        visited.add(s)
        q += [(n, path+[s]) for n in moves(s)]
start = '123456708'
print(*bfs(start), sep="\n")
